{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/playground/Playground.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","Playground","title","body","fetch","then","response","json","console","log","EditContact","updatedContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0525983e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT' :\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter( contact => contact.id !== action.payload )\r\n            };\r\n        case 'ADD_CONTACT' :\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts : state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts : [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts : res.data })            \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo : false\r\n    }\r\n\r\n    onShowClick = (e) => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) =>{\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact ;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value; \r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} \r\n                                <i onClick={ this.onShowClick } className=\"fas fa-sort-down\" \r\n                                    style={{ cursor: 'pointer' }}></i>\r\n                                <i className=\"fas fa-times\" \r\n                                    style={{ cursor: 'pointer', float:'right' , color: 'red' }}\r\n                                    onClick={ this.onDeleteClick.bind(this, id , dispatch) } ></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor:'pointer',\r\n                                            float: 'right',\r\n                                            color:'black',\r\n                                            marginRight: '1rem'\r\n                                        }}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}                \r\n                        </div>\r\n                    )\r\n                }}    \r\n            </Consumer>            \r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact : PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact'; \r\nimport {Consumer} from '../../Context'\r\n class Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        // Replacing Div element with React.Fragment as we do not need extra div inside the contacts element\r\n                        // to do so we are using React.Fragment\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-primary\">\r\n                                    Contact\r\n                                </span> List\r\n                            </h1>\r\n                            { contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                            \r\n                        </React.Fragment>\r\n                    ) \r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm bg-primary navbar-dark mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\"> { branding }</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/contact/add\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">\r\n                            <i className=\"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>           \r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n            type={type}\r\n            className={classnames('form-control form-control-lg',{\r\n                'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}>    \r\n        </input>\r\n        { error && \r\n            <div className=\"invalid-feedback\">\r\n                { error }\r\n            </div>\r\n        }        \r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label : PropTypes.string.isRequired,    \r\n    name : PropTypes.string.isRequired,\r\n    value : PropTypes.string.isRequired,\r\n    placeholder : PropTypes.string.isRequired,\r\n    type : PropTypes.string.isRequired,    \r\n    onChange : PropTypes.func.isRequired,\r\n    error : PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type : 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name : '',\r\n        email :'',\r\n        phone : '',\r\n        errors:{}\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch,e) =>{\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n        if(name === '') {\r\n            this.setState({errors : {\r\n                name : 'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n            \r\n        if(email === '') {\r\n            this.setState({errors : {\r\n                email : 'Email is required'\r\n            }});\r\n            return;\r\n        }\r\n            \r\n        if(phone === '') {\r\n            this.setState({errors : {\r\n                phone : 'Phone is required'\r\n            }})\r\n            return;\r\n        }        \r\n        const newContact = {\r\n            name, email, phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n        \r\n        dispatch({type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // Clearing the state after saving the data\r\n        this.setState({\r\n            name :'',\r\n            email: '',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        // Redirectiong back to main List\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name , email , phone , errors } = this.state        \r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />                                \r\n                                <input type=\"submit\" value=\"Add\"\r\n                                    className=\"btn btn-light btn-block\"></input>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">This is an simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">\r\n                    404 \r\n                </span> Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">Page you are looking for not found or moved.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Playground extends Component {\r\n\r\n    state = {\r\n        title : '',\r\n        body : ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title : data.title,\r\n                body : data.body\r\n            }));\r\n    }\r\n\r\n    /*\r\n    componentWillMount() {\r\n        console.log('Lifcycle Method componentWillMount');\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('Lifcycle Method componentDidUpdate');\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log('Lifcycle Method componentDidUpdate');\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log('componentWillReceiveProps')\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState ) {\r\n        \r\n    }*/\r\n \r\n    render() {\r\n        const {title,body}  = this.state;\r\n        console.log('Lifecycle method render');\r\n        return (\r\n            <div>\r\n                <h1> {title} </h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Playground;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../Context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name : '',\r\n        email :'',\r\n        phone : '',\r\n        errors:{}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        this.setState({\r\n            name: res.data.name,\r\n            email: res.data.email,\r\n            phone: res.data.phone,\r\n        });\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch,e) =>{\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n        if(name === '') {\r\n            this.setState({errors : {\r\n                name : 'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n            \r\n        if(email === '') {\r\n            this.setState({errors : {\r\n                email : 'Email is required'\r\n            }});\r\n            return;\r\n        }\r\n            \r\n        if(phone === '') {\r\n            this.setState({errors : {\r\n                phone : 'Phone is required'\r\n            }})\r\n            return;\r\n        }\r\n        \r\n        const updatedContact = {\r\n            name, email, phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data });\r\n        \r\n        // Clearing the state after saving the data\r\n        this.setState({\r\n            name :'',\r\n            email: '',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        // Redirectiong back to main List\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name , email , phone , errors } = this.state        \r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Update</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                <TextInputGroup \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={name}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    value={email}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                />\r\n                                <TextInputGroup \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    value={phone}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phone}\r\n                                />                                \r\n                                <input type=\"submit\" value=\"Update\"\r\n                                    className=\"btn btn-light btn-block\"></input>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Contacts from './components/contacts/Contacts';\r\nimport Header from './components/layout/Header'\r\nimport AddContact from './components/contacts/AddContact'\r\nimport About from './components/pages/About'\r\nimport NotFound from './components/pages/NotFound'\r\nimport Playground from './components/playground/Playground'\r\nimport EditContact from './components/contacts/EditContact';\r\n\r\nimport {Provider} from './Context'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router>\r\n        <div className=\"App\">    \r\n          <Header branding=\"Contact Manager\"/>\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Contacts}/>\r\n              <Route exact path=\"/contact/add\" component={AddContact}/>\r\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\r\n              <Route exact path=\"/about\" component={About}/>\r\n              <Route exact path=\"/playground\" component={Playground}/>\r\n              <Route exact component={NotFound}/>\r\n            </Switch>\r\n          </div>      \r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}